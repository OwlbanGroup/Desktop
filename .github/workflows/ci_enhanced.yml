name: CI Enhanced

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
        python-version: [3.9, 3.10, 3.11]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        run: npm install

      - name: Run Node.js linting
        run: npm run lint
        continue-on-error: true

      - name: Run Node.js tests
        run: npm test

      - name: Run Node.js security audit
        run: npm audit --audit-level moderate
        continue-on-error: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run Python linting
        run: |
          black --check .
          flake8 .
          mypy .

      - name: Run Python tests with coverage
        run: |
          pytest --cov=.

      - name: Run Python security scan
        run: |
          safety check -r requirements.txt

      - name: Run E2E Tests
        run: |
          python e2e_test_suite.py

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            test_output.log
            e2e_test_report.txt
            flask_app_test_results.json

      - name: Generate test summary
        if: always()
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Python tests: $(pytest --collect-only -q | wc -l) collected" >> $GITHUB_STEP_SUMMARY
          echo "- E2E tests completed" >> $GITHUB_STEP_SUMMARY
          if [ -f e2e_test_report.txt ]; then
            echo "- E2E report generated" >> $GITHUB_STEP_SUMMARY
          fi
